%================================================================
%  Simple FODO line with ground motion
%  MAT-LIAR simulation
%     example how to use Transfer Functions
%
%  A.S. Jan.29, 2002
%================================================================
tbeg=cputime;
%
%
%  Initialize LIAR with a beamline beamline
init_line;
%
% Number of iterations to average each sample
niter=64;
tsample=0.0:0.01:10.23;
nsample=length(tsample);
%
% Settings for getting the beam parameters.
[ierr,sbpm] = mat_liar('MAT_INFO_BPMS');
nbpm=length(sbpm);
bpm_indx=1:1:nbpm;
mat_liar('MAT_INIT_XBPM',nbpm,bpm_indx);
mat_liar('MAT_INIT_YBPM',nbpm,bpm_indx);
% Empty arrays for storing the data.
mislx=zeros(nbpm,nsample,niter);
misly=zeros(nbpm,nsample,niter);
%
% Set up the ground motion model 
mat_liar('define_gm_model,');
mat_liar('pwkfile = ''gm_model_B.data'' , Tmin = 0.001, Tmax = 100. ');
mat_liar('print_pwk_param');
%
%
% Set up BPM resolution, no other errors.
mat_liar('error_gauss_bpm, name = ''*'','); % Name to be matched
mat_liar('x_sigma = 0.e-6,  '); % Sigma misalignment
mat_liar('x_cut   = 3,      '); % Cut for Gaussian  
mat_liar('y_sigma = 0.e-6,  '); % Sigma misalignment
mat_liar('y_cut   = 3,      '); % Cut for Gaussian
mat_liar('resol = 1.0e-15,  '); % bpm res, meters
mat_liar('reset = .t.       '); % reset previous misalignm.
%
% Create three Transfer Functions
mat_liar('create_gm2elt_tf, number_of_tf=3');

% Harmonics should be prepared before TF will be defined
mat_liar('prepare_gm_harmonics');

% Define Transfer functions
% by specifying resonance frequency f0 and inverse of quality factor 
mat_liar('define_gm2elt_tf, id_tf = 1, f0_tf = 0.5, q_tf = 0.2, ');
mat_liar('  tfsavefile = ''tf_1.out'' ');
% you can also save TF to a file to check how it looks like 

mat_liar('define_gm2elt_tf, id_tf = 2, f0_tf = 2.0, q_tf = 0.1, ');
mat_liar('  tfsavefile = ''tf_2.out'' ');

% Define TF by reading an arbitrary transfer function from file
% the file should contain 3 columns : (f, TF_Re, TF_Im)
mat_liar('define_gm2elt_tf, id_tf = 3, gmtffile = ''girder_tf.dat'', ');
mat_liar('tfsavefile = ''tf_3.out'' ');

% use this to look up how the elements are assigned to supports 
% and to decide which TF should be assigned to which support
mat_liar('show_support');

% Assign TF to a particular support for either X or Y motion or both
% (if a support has 2 or more points of support, the same TF 
%  will be assigned to each point)
mat_liar('assign_gm2elt_tf, i_of_support = 2,  id_tfx = 3  ');

mat_liar('assign_gm2elt_tf, i_of_support = 3,  id_tfx = 3 ');

mat_liar('assign_gm2elt_tf, i_of_support = 4,  id_tfx = 2 , ');
mat_liar('  id_tfy = 1 , ds_at_ground = 9.0 ');

% By specifying ds_at_ground one can also artificially displace 
% position at which support is mounted on the ground. 
% This may be useful to simulate a case when S position in beam 
% lattice does not match the S position at the ground, 
% e.g. for FD which is cantilevered into detector

% then move it 
mat_liar('set_gm_abs_time, timeabs = 0  ');
mat_liar('gm_move, dt = 0.0, reset=.t. ');

%
% loop over iterations, each time will refresh harmonics
%
for iter=1:niter
%
mat_liar('refresh_gm_harmonics');
mat_liar('set_gm_abs_time, timeabs = 0  ');
mat_liar('gm_move, dt = 0.0, reset=.t. ' );
%
%mat_liar('  track, dolog = .f. ');
% Get initial beam parameters and logbook, without misalignment
%mat_liar('logbook, process = .f.,');
%mat_liar('print = .f.');
[iss,mislx(:,1,iter),misly(:,1,iter)] = mat_liar('MAT_GET_BPMD',nbpm); % misalignments of BPMs
%
for isample=2:nsample
    dtsample=tsample(isample)-tsample(isample-1);
    dtstr=num2str(dtsample);
        gmstr1=['gm_move, dt = ',dtstr,' , silent = .t. ']; 
    gmstr2=['increase_gm_abs_time, dtime = ',dtstr];
    mat_liar(gmstr1); 
    mat_liar(gmstr2); 
%    mat_liar('  track, dolog = .f. ');
     [iss,mislx(:,isample,iter),misly(:,isample,iter)] = mat_liar('MAT_GET_BPMD',nbpm);
%    
end ;% loop of isample
%
%iter
end ;% loop of iter
%
% Save output in Matlab format
telap=cputime-tbeg;
%
clear ierr isample iter 
save gm_fodo_fft_w_tf_save2
%
