%================================================================
%  Simple FODO line with ground motion
%  MAT-LIAR simulation
%     Calculate data to find spectra p(t,k) 
%
%  A.S. Dec.31, 2001
%================================================================

%  Initialize LIAR with FODO beamline
% this fodo has 512 full cells
init_fodo
%
% Number of iterations to average each sample
niter=64;
tsample=[ 0.0 100. 1000. 1.e4 1.e5 1.e6 1.e7 ];
nsample=length(tsample);
%
% Settings for getting the beam parameters.
[ierr,sbpm] = mat_liar('MAT_INFO_BPMS');
nbpm=length(sbpm);
bpm_indx=1:1:nbpm;
mat_liar('MAT_INIT_XBPM',nbpm,bpm_indx);
mat_liar('MAT_INIT_YBPM',nbpm,bpm_indx);
% Empty arrays for storing the data.
mislx=zeros(nbpm,nsample,niter);
misly=zeros(nbpm,nsample,niter);
%
% Set up the ground motion model 
mat_liar('define_gm_model,');
mat_liar('pwkfile = ''gm_model_B.data'' , Tmin = 100., Tmax = 1.e7 ');
mat_liar('print_pwk_param');
%
%
% Set up BPM resolution, no other errors.
mat_liar('error_gauss_bpm, name = ''*'','); % Name to be matched
mat_liar('x_sigma = 0.e-6,  '); % Sigma misalignment
mat_liar('x_cut   = 3,      '); % Cut for Gaussian  
mat_liar('y_sigma = 0.e-6,  '); % Sigma misalignment
mat_liar('y_cut   = 3,      '); % Cut for Gaussian
mat_liar('resol = 1.0e-15,  '); % bpm res, meters
mat_liar('reset = .t.       '); % reset previous misalignm.
%
%
mat_liar('prepare_gm_harmonics');
mat_liar('set_gm_abs_time, timeabs = 0  ');
mat_liar('gm_move, dt = 0.0, reset=.t. ');
%
%
% loop over iterations, each time will refresh harmonics
%
for iter=1:niter
%
mat_liar('refresh_gm_harmonics');
mat_liar('set_gm_abs_time, timeabs = 0  ');
mat_liar('gm_move, dt = 0.0, reset=.t. ');
%
mat_liar('  track, dolog = .t. ');
% Get initial beam parameters and logbook, without misalignment
mat_liar('logbook, process = .f.,');
mat_liar('print = .t.');
[iss,mislx(:,1,iter),misly(:,1,iter)] = mat_liar('MAT_GET_BPMD',nbpm); % misalignments of BPMs
%
for isample=2:nsample
    dtsample=tsample(isample)-tsample(isample-1);
    dtstr=num2str(dtsample);
        gmstr1=['gm_move, dt = ',dtstr,' ']; 
    gmstr2=['increase_gm_abs_time, dtime = ',dtstr]
    mat_liar(gmstr1); 
    mat_liar(gmstr2); 
    mat_liar('  track, dolog = .f. ');
    [iss,mislx(:,isample,iter),misly(:,isample,iter)] = mat_liar('MAT_GET_BPMD',nbpm);
end % loop of isample
%
end % loop of iter
%
% Save output in Matlab format
clear ierr isample iter 
save gm_fodo_fft_2_save
%
